Main components of 
1) Component   2) Serivece=> use to handle data contact with API   3) Modules for encapsulation

create newapp=> ng new namepapp
run app=>ng serve

Databinding
one way binding is presenting the data on webpage from class (use interpolation {{}} for that)
two way change in html and change reflect in component property too ( use ngModel for that)

component building


create an component
ng g component nameof component  (g is generate but you can write anything)
reder the components
basically the component has its own tag name use it in other places


for creating complex datatypes we use interfaces
command=> ng g interface path/name

for 2 way binding we need FormsModule in app.modules

localstorage

lifecycle hooks learn it before use
ngonit use it to get the data from ocalstorage on using component

bootstrap
npm install bootstrap@5.3


module creation
ng g m home Or ng generate module home

component in module
ng g c home --module=home Or ng generate component home --m=home

service is responsible for data so keep it mind
ng g s path/name of servaice   this path is applicable for all
ng generate service path/name of servaice   
this path is applicable for all
service is independent of modules
//services are injectible as dependecy injection


routes
routes are use to jump from one point to another point over the website little bit like from one page to anotherpage

Learing about Reactive Form module
it provise Reactive form validation 
noe there are 2 kid of validations one is Reactive form and other is Template-Driven Form validation
Reactive form Validation validate the form in attached tyscript class
where template-Driven Form do it in template let say you get nuber type input ngcheck thing














//commands
ng new projectName

Creates a new Angular project with the specified project name.


ng serve

Builds the application and starts a web server to serve your application during development.


ng serve --open

or

ng serve -o

Same as ng serve, but also opens your default web browser to the application.


ng generate component componentName

or

ng g c componentName

Generates a new component with the specified name.


ng generate service serviceName

or

ng g s serviceName

Generates a new service with the specified name.


ng build

Builds your application for production, creating a dist/ folder with the output.


ng update

Checks your application for outdated dependencies, and can also update them.


to run in development env
ng serve --configuration=development

ng add @angular/material


ngrx for global state
look into it not clear that much
npm install @ngrx/store@16.2 @ngrx/effects@16.2